mse version: 2.0.0
game: magic
short name: M15 Sparkers
full name: Exporter
installer group: magic/M15 style/double faced/sparker
icon: card-sample.png
position hint: 74

version: 2015-09-08
depends on:
	package: magic.mse-game
	version: 2014-06-25
depends on:
	package: magic-default-image.mse-include
	version: 2007-09-23
depends on:
	package: magic-watermarks.mse-include
	version: 2007-09-23
depends on:
	package: magic-identity-new.mse-include
	version: 2012-01-22
depends on:
	package: magic-mana-large.mse-symbol-font
	version: 2007-09-23
depends on:
	package: magic-mana-small.mse-symbol-font
	version: 2007-09-23

card width: 375
card height: 523
card dpi: 150
############################################################## Extra scripts
init script:
	# Load scripts for image box
	include file: /magic-default-image.mse-include/scripts
	
	# Should hybrids have a grey name?
	mask_hybrid_with_land := { styling.grey_hybrid_name }
	
	# No colorless templates, only artifacts
	no_colorless_template := {
		if input == "c" then "a"
		else input
	}
	template_prefix := [card: "" card2: "" card3: "" pt: "" stamp: "" identity: "/magic-identity-new.mse-include/" identity2: "/magic-identity-new.mse-include/"]
	template_suffix := [card: "card.jpg" card2: "card2.jpg" card3: "card3.jpg" pt: "pt.png" stamp: "stamp.jpg" identity: "identity.png" identity2: "identity.png"]
	template := { template_prefix[type] + input + template_suffix[type] }
	
	#Lands only on regular frame
	land_template := { if type == "card2" or type == "card3" or type == "stamp2" then "a{type}.jpg" else template_prefix[type] + (if input == "a" then "c" else input) + (if type=="identity" then "" else "l") + template_suffix[type] }
	
	# Use the normal tap symbol
	mana_t := {
		if      styling.tap_symbol == "old"        then "old"
		else if styling.tap_symbol == "diagonal T" then "older"
		else                                            "new"
	}
	
	# Use guild mana symbols?
	guild_mana := { styling.use_guild_mana_symbols }
	
	# This will create three seperate card faces
	card_background2 := { color_background(type:"card2",     base_hybrid:card_hybrid) }
	card_background3 := { color_background(type:"card3",     base_hybrid:card_hybrid) }
	
	paintbrush_color := {
		if to_int(card.border_color) < 96 then "white" else "black"
	}
	
	# Loyalty cost arrows
	loyalty_image := {
		if      contains(input, match: "+") then "loyalty up"
		else if contains(input, match: "-") then "loyalty down"
		else                                     "loyalty naught"
	}
	
	card_shape := {"double faced planeswalker"}

	# Is the card a promo card?
	is_promo := { styling.promo }
	
	# Does the card have four abilities?
	has_four_abilities2 := { contains(paragraph_count(card.rule_text_2), match: "\n\n\n") }
	paragraph_count := 
		replace@(match:"<soft-line>\n", replace:"")+
		filter_text@(match:"\n")
	
	corner_color := {
		if contains(card.card_color, match:"multicolor") or contains(card.card_color, match:"hybrid") then "multicolor"
		else if contains(card.card_color, match:"white") then "white"
		else if contains(card.card_color, match:"blue") then "blue"
		else if contains(card.card_color, match:"black") then "black"
		else if contains(card.card_color, match:"red") then "red"
		else if contains(card.card_color, match:"green") then "green"
		else "colorless"
	}
	is_backface := { styling.back_face }
	has_identity := {styling.first_color_indicator }
############################################################## Set info fields
set info style:
	symbol:
		variation:
			name: invertedcommon
			border radius: 0.10
			fill type: solid
			fill color:   rgb(255,255,255)
			border color: rgb(0,0,0)
############################################################## Extra style options
styling field:
	type: boolean
	name: back face
	description: Shows only the back face for exporting.
	initial: yes
styling field:
	type: boolean
	name: first color indicator
	description: use the color indicator for the first card.
	initial: no
styling field:
	type: boolean
	name: grey hybrid name
	description: Use a grey background for the name and type line on hybrid cards. This is done on real cards.
styling field:
	type: boolean
	name: use guild mana symbols
	description: Use the Ravnica guild symbols instead of the official half/half circles for hybrid mana.
	initial: no
styling field:
	type: package choice
	name: text box mana symbols
	match: magic-mana-*.mse-symbol-font
	initial: magic-mana-small.mse-symbol-font
styling field:
	type: choice
	name: tap symbol
	description: What tap and untap symbols should be used on cards?
	initial: modern
	choice: modern
	choice: old
	choice: diagonal T
styling field:
	type: choice
	name: center text
	description: When to center text (short text only means only on one-line cards with no flavor text)
	choice: always
	choice: short text only
	choice: never
	initial: never
styling field:
	type: boolean
	name: promo
	description: Is this card a promo card, with the "P" rarity?
	initial: no
styling field:
	type: boolean
	name: inverted common symbol
	description: Should the common rarity symbol be inverted, like in Coldsnap?
	initial: no
styling field:
	type: package choice
	name: overlay
	description: Should there be an overlay applied, such as foil?
	match: magic-overlay-*.mse-include
	required: false
styling style:
	use guild mana symbols:
		choice images:
			yes: /magic-mana-small.mse-symbol-font/mana_guild_rg.png
			no:  /magic-mana-small.mse-symbol-font/mana_rg.png
	tap symbol:
		render style: both
		choice images:
			modern:     /magic-mana-large.mse-symbol-font/mana_t.png
			old:        /magic-mana-large.mse-symbol-font/mana_t_old.png
			diagonal T: /magic-mana-large.mse-symbol-font/mana_t_older.png
	center text:
		render style: both
		choice images:
			always:          /magic.mse-game/icons/center-all-text.png
			short text only: /magic.mse-game/icons/center-short-text.png
			never:           /magic.mse-game/icons/center-no-text.png
	inverted common symbol:
		choice images:
			no:  { symbol_variation(symbol: set.symbol, variation: "common") }
			yes: { symbol_variation(symbol: set.symbol, variation: "invertedcommon") }
############################################################## Card fields
card style:
	############################# Background stuff
	card color:
		left: 0
		top: 0
		width:	{ if is_backface() then 0 else 375 }
		height:	{ if is_backface() then 0 else 523 }
		z index: -2
		render style: image
		popup style: in place
		image: { card_background() }
	card color 2:
		left: 0
		top: 0
		width:	{ if is_backface() then 375 else 0 }
		height:	{ if is_backface() then 523 else 0 }
		z index: 0
		render style: image
		popup style: in place
		image: { if has_four_abilities2() then card_background3() else card_background2() }
	############################# Name line
	name:
		left: { if card.card_symbol != "none" then 74 else 56}
		top: 30
		right:  { if is_backface() then 0 else 341 - card_style.casting_cost.content_width }
		height: { if is_backface() then 0 else 23 }
		alignment: bottom shrink-overflow
		padding bottom: 0
		z index: 1
		font:
			name: Beleren Bold
			size: 16
			color: black
	name 2:
		left: 60
		top: 23
		right: { if is_backface() then 337 - card_style.casting_cost_2.content_width else 0}
		height: { if is_backface() then 23 else 0 }
		alignment: bottom shrink-overflow
		padding bottom: 0
		z index: 1
		font:
			name: Beleren Bold
			size: 16
			color: black
	casting cost:
		right: 346
		top: 29
		width: { if is_backface() then 0 else max(30, card_style.casting_cost.content_width) + 5 }
		height: { if is_backface() then 0 else 23}
		alignment: middle right
		font:
			name: MPlantin
			size: 15
		symbol font:
			name: magic-mana-large
			size: 15
			alignment: middle right
		always symbol: true
		z index: 2
		padding top: 0
	casting cost 2:
		right: 345
		top : 22
		width: { if is_backface() then max(30, card_style.casting_cost_2.content_width) + 5 else 0}
		height: { if is_backface() then 23 else 0 }
		alignment: middle right
		symbol font:
			name: magic-mana-large
			size: 15
			alignment: middle right
		always symbol: true
		z index: 2
		padding top: 0
	card symbol:
		left: {if card.card_symbol=="none" then 45 else 55}
		top: 30
		height: 20
		width: 14
		z index: 2
		render style: image
		choice images:
			tombstone: tombstone.png
	############################# Image
	image:
		left: 29
		top: 60
		width: { if is_backface() then 0 else 316 }
		height:	{ if is_backface() then 0 else 231 }
		z index: 1
		default: {default_image(card.card_color)}
	image 2:
		left: 25
		top: 52
		width: { if is_backface() then 324 else 0 }
		height:	{ if is_backface() then 427.5 else 0 }
		z index: 1
		mask: { "imagemask" + ( if has_four_abilities2() then "_4abil" else "" ) + ".png" }
	############################# Card type
	indicator:
		left: 31
		top: 300
		width: {if is_backface() then 0 else 17 }
		height: {if is_backface() then 0 else 17 }
		z index: 2
		render style: image
		visible: { has_identity() }
		image: { card_identity() }
	indicator 2:
		left: 30
		top: { if has_four_abilities2() then 265 else 300 }
		width: { if is_backface() then 17 else 0 }
		height: {if is_backface() then 17 else 0 }
		z index: 2
		render style: image
		visible: { has_identity_2() }
		image: { card_identity_2() }
	type:
		left: { if has_identity() then "52" else "32" }
		top: 297
		width: { if is_backface() then 0 else (if has_identity() then "290" else "310") - max(22,card_style.rarity.content_width) }
		height: {if is_backface() then 0 else 20 }
		alignment: top shrink-overflow
		z index: 1
		padding top: 2
		font:
			name: Beleren Bold
			size: 13
			color: black
			separator color: red
	type 2:
		left: { if has_identity_2() then "50" else "36" }
		top: { if has_four_abilities2() then 261 else 296 }
		width: { if not is_backface() then 0 else (if has_identity_2() then "290" else "304") - max(22,card_style.rarity.content_width) }
		height: { if is_backface() then 20 else 0 }
		alignment: top shrink-overflow
		z index: 2
		padding top: 2
		font:
			name: Beleren Bold
			size: 13
			color: black
			separator color: rgb(128,128,128)
	rarity:
		right: { if is_backface() then 0 else 344 }
		top: { if is_backface() then 0 else 297 }
		width: {if is_backface() then 0 else 44 }
		height: { if is_backface() then 0 else 22 }
		z index: 4
		render style: image
		alignment: middle right
		choice images:
			# Images based on the set symbol
			basic land:
				script:
					if styling.inverted_common_symbol then symbol_variation(symbol: set.symbol, variation: "invertedcommon")
					else symbol_variation(symbol: set.symbol, variation: "common")
			common:
				script:
					if styling.inverted_common_symbol then symbol_variation(symbol: set.symbol, variation: "invertedcommon")
					else symbol_variation(symbol: set.symbol, variation: "common")
			uncommon:   script: symbol_variation(symbol: set.symbol, variation: "uncommon")
			rare:       script: symbol_variation(symbol: set.symbol, variation: "rare")
			mythic rare:       script: symbol_variation(symbol: set.symbol, variation: "mythic rare")
			special:    script: symbol_variation(symbol: set.symbol, variation: "special")
	rarity 2:
		right: { if is_backface() then 342 else 0 }
		top : { if has_four_abilities2() then 263 else 298 }
		width: { if is_backface() then 42 else 0 }
		height: { if is_backface() then 21 else 0 }
		z index: 3
		render style: image
		alignment: middle right
		choice images:
			# Images based on the set symbol
			basic land:
				script:
					if styling.inverted_common_symbol then symbol_variation(symbol: set.symbol, variation: "invertedcommon")
					else symbol_variation(symbol: set.symbol, variation: "common")
			common:
				script:
					if styling.inverted_common_symbol then symbol_variation(symbol: set.symbol, variation: "invertedcommon")
					else symbol_variation(symbol: set.symbol, variation: "common")
			uncommon:   script: symbol_variation(symbol: set.symbol, variation: "uncommon")
			rare:       script: symbol_variation(symbol: set.symbol, variation: "rare")
			mythic rare:       script: symbol_variation(symbol: set.symbol, variation: "mythic rare")
			special:    script: symbol_variation(symbol: set.symbol, variation: "special")
	############################# Text box
	text:
		left: 29
		top: 327
		width: { if is_backface() then 0 else 314}
		height: { if is_backface() then 0 else 154}
		font:
			name: MPlantin
			italic name: MPlantin-Italic
			size: 14
			scale down to: 6
			color: black
		symbol font:
			name: { styling.text_box_mana_symbols }
			size: 14
		alignment:
			script:
				if (styling.center_text == "short text only" and
				   not contains(match:"\n", card.rule_text) and
				   card.flavor_text == "<i-flavor></i-flavor>" and
				   card_style.text.content_lines <= 2) or
				   styling.center_text == "always"
				then "middle center"
				else "middle left"
		z index: 2
		padding left:   6
		padding right:  4
		line height hard: 1.2
		line height line: 1.5
		line height soft: 0.9
		line height hard max: 1.3
		line height line max: 1.6
	text 2:
		left: 66
		top: { if has_four_abilities2() then 289 else 330 }
		width: { if is_backface() then 282 else 0 }
		height: { if not is_backface() then 0 else if has_four_abilities2() then 183 else 148 }
		font:
			name: MPlantin
			italic name: MPlantin-Italic
			size: { if has_four_abilities2() then 13.8 else 14 }
			scale down to: 6
			color: { if has_four_abilities2() then rgba(0,0,0,0) else "black" }
		symbol font:
			name: { if has_four_abilities2() then "" else styling.text_box_mana_symbols }
			size: 14
		paragraph height: 49
		alignment:
			script:
				if (styling.center_text == "short text only" and
				   not contains(match:"\n", card.rule_text) and
				   card.flavor_text == "<i-flavor></i-flavor>" and
				   card_style.text.content_lines <= 2) or
				   styling.center_text == "always"
				then "middle center"
				else "middle left"
		z index: 4
		mask: text_mask.png
		padding left:   6
		padding right:  4
		padding bottom: 2
		line height hard: 1.2
		line height line: 1.5
		line height soft: { if has_four_abilities2() then 0.895 else 0.9 }
		line height hard max: 1.3
		line height line max: 1.6
	watermark:
		left: 117
		top: 321
		width: {if is_backface() then 0 else 138 }
		height: { if is_backface() then 0 else 166 }
		z index: 1
		render style: image
		popup style: in place
		alignment: middle center
		include file: /magic-watermarks.mse-include/watermarks
	watermark 2:
		left: 494
		top : { if has_four_abilities2() then 296 else 331 }
		width: {if is_backface() then 138 else 0 }
		height: { if not is_backface() then 0 else if has_four_abilities2() then 185 else 150 }
		z index: 2
		render style: image
		alignment: middle center
		include file: /magic-watermarks.mse-include/watermarks
	############################# PT
	pt:
		z index: 2
		left: 286
		top: { if is_backface() then 0 else 469 }
		width: { if is_backface() then 0 else 60 }
		height:	28
		alignment: center middle shrink-overflow
		font:
			name: Beleren Bold
			size: 16
			color: black
			separator color: red
	############################# Loyalty
	loyalty 2:
		z index: 7
		left: 326
		top: 462
		width: {if is_backface() then 13.16 else 0 }
		height: { if is_backface() then 34.63 else 0 }
		alignment: center middle
		font:
			name: Beleren Bold
			size: 14
			color: white
	loyalty cost 5:
		z index: 7
		left: 32
		top: { if has_four_abilities2() then 297 else 335 }
		width: {if is_backface() then 13.16 else 0 }
		height:	{if is_backface() then 34.63 else 0 }
		alignment: center middle
		font:
			name: Beleren Bold
			size: 11
			color: white
	loyalty cost 6:
		z index: 7
		left: 32
		top: { if has_four_abilities2() then 344 else 386 }
		width: {if is_backface() then 13.16 else 0 }
		height:	{if is_backface() then 34.63 else 0 }
		alignment: center middle
		font:
			name: Beleren Bold
			size: 11
			color: white
	loyalty cost 7:
		z index: 7
		left: 32
		top: { if has_four_abilities2() then 391 else 435 }
		width: {if is_backface() then 13.16 else 0 }
		height:	{if is_backface() then 34.63 else 0 }
		alignment: center middle
		font:
			name: Beleren Bold
			size: 11
			color: white
	loyalty cost 8:
		z index: 7
		left: 32
		top: 438
		width: { if is_backface() and has_four_abilities2() then 13.16 else 0 }
		height:	{ if is_backface() and has_four_abilities2() then 34.63 else 0 }
		alignment: center middle
		font:
			name: Beleren Bold
			size: 11
			color: white
	############################# Card sorting / numbering
	set code:
		left: 24
		top: 498
		width: 40
		height: 10
		z index: 1
		font:
			name: Relay-Medium
			size: 7
			color: white
			weight: bold
	############################# Copyright stuff
	illustrator:
		left: { 44 + card_style.set_code.content_width }
		top: 497.5
		width: { if is_backface() then 0 else 200 }
		height: { if is_backface() then 0 else 10 }
		z index: 4
		font:
			name: Beleren Small Caps Bold
			size: 7.25
			color: white
	copyright:
		right: 350
		top: { if card.pt != "" then 500 else 488 }
		width: 140
		height: 10
		z index: 4
		alignment: middle right shrink-overflow
		font:
			name: Matrix
			size: 7
			color: white
			weight: bold
	illustrator 2:
		left: { 44 + card_style.set_code.content_width }
		top: 497.5
		width: { if is_backface() then 200 else 0 }
		height: { if is_backface() then 10 else 0 }
		z index: 4
		font:
			name: Beleren Small Caps Bold
			size: 7.25
			color: {rgb(255,255,255)}		
############################################################## Extra card fields
extra card field:
	type: text
	name: card code
	save value: false
	script: forward_editor(prefix: card_number_m15() + (if is_backface() then "b" else "a") + "/" + card_count_m15() + " " + rarity_code() + " ", field: card.card_code_text)
extra card field:
	type: choice
	name: artist arrow
	editable: false
	save value: false
	choice: white
extra card field:
	type: choice
	name: pt box
	script: card.card_color
	editable: false
	save value: false
extra card field:
	type: choice
	name: stamp
	script: card.card_color
	editable: false
	save value: false
extra card field:
	type: choice
	name: foil stamp
	choice: stamp
	save value: false
	editable: false
extra card field:
	type: choice
	name: foil layer
	choice: foil
	save value: false
	editable: false
extra card field:
	type: choice
	name: corner
	choice: colorless
	choice: white
	choice: blue
	choice: black
	choice: red
	choice: green
	choice: multicolor
	default: corner_color()
	save value: true
	editable: true
extra card field:
	type: choice
	name: corner 2
	choice: planeswalker
	save value: false
	editable: false
extra card field:
	type: choice
	name: foil layer 2
	choice: foil
	save value: false
	editable: false
extra card field:
	type: choice
	name: loyalty box 2
	editable: false
	choice: loyalty
	save value: false
extra card field:
	type: choice
	name: loyalty cost box 5
	editable: false
	script: loyalty_image(card.loyalty_cost_5)
	save value: false
extra card field:
	type: choice
	name: loyalty cost box 6
	editable: false
	script: loyalty_image(card.loyalty_cost_6)
	save value: false
extra card field:
	type: choice
	name: loyalty cost box 7
	editable: false
	script: loyalty_image(card.loyalty_cost_7)
	save value: false
extra card field:
	type: choice
	name: loyalty cost box 8
	editable: false
	script: loyalty_image(card.loyalty_cost_8)
	save value: false
extra card field:
	type: text
	name: colon 5
	editable: false
	script: ":"
	save value: false
extra card field:
	type: text
	name: colon 6
	editable: false
	script: ":"
	save value: false
extra card field:
	type: text
	name: colon 7
	editable: false
	script: ":"
	save value: false
extra card field:
	type: text
	name: colon 8
	editable: false
	script: ":"
	save value: false
extra card field:
	type: text
	name: third text
	editable: false
	multi line: true
	save value: false
	script: card.text_2
extra card style:
	card code:
		left: 24
		top: 488
		width: 120
		height: 10
		z index: 1
		font:
			name: Relay-Medium
			size: 7
			color: white
			weight: bold	
	artist arrow:
		left: { 28 + card_style.set_code.content_width }
		top: 500
		width: 12
		height: 7
		z index: 2
		render style: image
		image: artist_arrow.png
	pt box:
		left: 273
		top: 466
		width: { if is_backface() then 0 else 81 }
		height:	{ if is_backface() then 0 else 42 }
		z index: 1
		visible: { card.pt != "" }
		render style: image
		image: { card_ptbox() }
	stamp:
		left: 165
		top: 472
		width: 46
		height: 26
		z index: 1
		visible: { is_rare() and not is_backface()}
		render style: image
		image: { card_stamp() }
		mask: stampmask.png
	foil stamp:
		left: 165
		top: 472
		width: 46
		height: 26
		z index: 1
		visible: { is_rare() and not is_backface()}
		render style: image
		image: foil_stamp.png
	foil layer:
		left: 0
		top: 0
		width: 375
		height: 523
		z index: 3
		render style: image
		image: {if styling.overlay == "" then nil else styling.overlay + "/overlay.png"}
	corner:
		z index: 5
		left: 19
		top: 25
		height: { if is_backface() then 0 else 31 }
		width: { if is_backface() then 0 else 31 }
		render style: image
		choice images:
			colorless: ccorner.png
			white: wcorner.png
			blue: ucorner.png
			black: bcorner.png
			red: rcorner.png
			green: gcorner.png
			multicolor: mcorner.png
	corner 2:
		left: 20
		top: 18
		height: { if is_backface() then 32 else 0 }
		width: { if is_backface() then 32 else 0 }
		render style: image
		image: planeswalker.png
		z index: 5
	loyalty box 2:
		right: 362
		top: 460
		width: { if is_backface() then 60 else 0 }
		height: { if is_backface() then 38 else 0 }
		z index: 6
		render style: image
		visible: { card.loyalty_2 !="" }
		choice images:
			loyalty: loyalty.png
	loyalty cost box 5:
		left: 18
		top: { if has_four_abilities2() then 295 else 333 }
		width: { if is_backface() then 42 else 0 }
		height: { if is_backface() then 40 else 0 }
		z index: 6
		render style: image
		visible: { card.loyalty_cost_5 !="" }
		choice images:
			loyalty up: loyaltyup.png
			loyalty down: loyaltydown.png
			loyalty naught: loyaltynaught.png
	loyalty cost box 6:
		left: 18
		top: { if has_four_abilities2() then 342 else 383 }
		width: { if is_backface() then 42 else 0 }
		height: { if is_backface() then 40 else 0 }
		z index: 6
		render style: image
		visible: { card.loyalty_cost_6 !="" }
		choice images:
			loyalty up: loyaltyup.png
			loyalty down: loyaltydown.png
			loyalty naught: loyaltynaught.png
	loyalty cost box 7:
		left: 18
		top: { if has_four_abilities2() then 389 else 432 }
		width: { if is_backface() then 42 else 0 }
		height: { if is_backface() then 40 else 0 }
		z index: 6
		render style: image
		visible: { card.loyalty_cost_7 !="" }
		choice images:
			loyalty up: loyaltyup.png
			loyalty down: loyaltydown.png
			loyalty naught: loyaltynaught.png
	loyalty cost box 8:
		left: 18
		top: 436
		width: { if has_four_abilities2() and is_backface() then 42 else 0 }
		height: 40
		z index: 6
		render style: image
		visible: { card.loyalty_cost_8 !="" }
		choice images:
			loyalty up: loyaltyup.png
			loyalty down: loyaltydown.png
			loyalty naught: loyaltynaught.png
	colon 5:
		left: 59
		top: { if has_four_abilities2() then 309 else 347 }
		width: { if is_backface() then 5 else 0 }
		height: { if is_backface() then 10 else 0 }
		z index: 6
		font:
			name: MPlantin
			size: 15
			scale down to: 15
			color: black
		alignment: middle center
		visible: { card.loyalty_cost_5 !="" }
	colon 6:
		left: 59
		top: { if has_four_abilities2() then 356 else 397 }
		width: { if is_backface() then 5 else 0 }
		height: { if is_backface() then 10 else 0 }
		z index: 6
		font:
			name: MPlantin
			size: 15
			scale down to: 15
			color: black
		alignment: middle center
		visible: { card.loyalty_cost_6 !="" }
	colon 7:
		left: 59
		top: { if has_four_abilities2() then 403 else 446 }
		width: 5
		width: { if is_backface() then 5 else 0 }
		height: { if is_backface() then 10 else 0 }
		font:
			name: MPlantin
			size: 15
			scale down to: 15
			color: black
		alignment: middle center
		visible: { card.loyalty_cost_7 !="" }
	colon 8:
		left: 59
		top: 450
		width: { if has_four_abilities2() and is_backface() then 5 else 0 }
		height: { if is_backface() then 10 else 0 }
		z index: 6
		font:
			name: MPlantin
			size: 15
			scale down to: 15
			color: black
		alignment: middle center
		visible: { card.loyalty_cost_8 !="" }
	third text:
		left: 66
		top: 293
		width: { if is_backface() then 282 else 0 }
		height: { if is_backface() then 183 else 0 }
		font:
			name: MPlantin
			italic name: MPlantin-Italic
			size: 14
			scale down to: 6
			color: black
		symbol font:
			name: { styling.text_box_mana_symbols }
			size: 14
		paragraph height: 47
		alignment:
			script:
				if (styling.center_text == "short text only" and
				   not contains(match:"\n", card.rule_text) and
				   card.flavor_text == "<i-flavor></i-flavor>" and
				   card_style.text.content_lines <= 2) or
				   styling.center_text == "always"
				then "middle center"
				else "middle left"
		z index: 3
		mask: text_mask.png
		padding left:   6
		padding right:  4
		padding bottom: 2
		line height hard: 1.2
		line height line: 1.5
		line height soft: 0.9
		line height hard max: 1.3
		line height line max: 1.6
		visible: { has_four_abilities2() }
